{"ast":null,"code":"var _jsxFileName = \"/media/sahil/Data/Projects/Python/Todo-App-React-Django-rest/frontend/src/components/Modal.js\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n\n      if (e.target.type === \"checkbox\") {\n        value = e.target.checked;\n      }\n\n      const activeItem = { ...this.state.activeItem,\n        [name]: value\n      };\n      this.setState({\n        activeItem\n      });\n    };\n\n    this.state = {\n      activeItem: this.props.activeItem\n    };\n  }\n\n  render() {\n    const {\n      toggle,\n      onSave\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Modal, {\n      isOpen: true,\n      toggle: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \" Todo Tasks \"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.activeItem.title,\n      onChange: this.handleChange,\n      placeholder: \"Enter Todo Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"description\",\n      value: this.state.activeItem.description,\n      onChange: this.handleChange,\n      placeholder: \"Enter Todo description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"completed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"completed\",\n      checked: this.state.activeItem.completed,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }), \"Completed\")))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      onClick: () => onSave(this.state.activeItem),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, \"Save Task\")));\n  }\n\n}","map":{"version":3,"sources":["/media/sahil/Data/Projects/Python/Todo-App-React-Django-rest/frontend/src/components/Modal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","CustomModal","constructor","props","handleChange","e","name","value","target","type","checked","activeItem","state","setState","render","toggle","onSave","title","description","completed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Button,\n      Modal,\n      ModalHeader,\n      ModalBody,\n      ModalFooter,\n      Form,\n      FormGroup,\n      Input,\n      Label\n} from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          activeItem: this.props.activeItem\n        };\n      }\n      handleChange = e => {\n        let { name, value } = e.target;\n        if (e.target.type === \"checkbox\") {\n          value = e.target.checked;\n        }\n        const activeItem = { ...this.state.activeItem, [name]: value };\n        this.setState({ activeItem });\n      };\n      render() {\n        const { toggle, onSave } = this.props;\n        return (\n          <Modal isOpen={true} toggle={toggle}>\n            <ModalHeader toggle={toggle}> Todo Tasks </ModalHeader>\n            <ModalBody>\n              <Form>\n                <FormGroup>\n                  <Label for=\"title\">Title</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"title\"\n                    value={this.state.activeItem.title}\n                    onChange={this.handleChange}\n                    placeholder=\"Enter Todo Title\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"description\">Description</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"description\"\n                    value={this.state.activeItem.description}\n                    onChange={this.handleChange}\n                    placeholder=\"Enter Todo description\"\n                  />\n                </FormGroup>\n                <FormGroup check>\n                  <Label for=\"completed\">\n                    <Input\n                      type=\"checkbox\"\n                      name=\"completed\"\n                      checked={this.state.activeItem.completed}\n                      onChange={this.handleChange}\n                    />\n                    Completed\n                  </Label>\n                </FormGroup>\n              </Form>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"success\" onClick={() => onSave(this.state.activeItem)}>\n                Save Task\n              </Button>\n            </ModalFooter>\n          </Modal>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}